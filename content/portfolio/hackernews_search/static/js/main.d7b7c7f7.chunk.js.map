{"version":3,"sources":["Button.js","Sort.js","Table.js","Loading.js","utils.js","Search.js","App.js","TableAndButton.js","index.js"],"names":["Button","onClick","className","children","type","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Sort","sortKey","activeSortKey","onSort","isSortReverse","sortClass","classNames","imgPath","includes","src","alt","Table","state","setState","prevState","this","props","onDismiss","sortedList","reverseSortedList","map","item","key","objectID","href","url","title","author","num_comments","points","Component","Loading","withLoading","isLoading","rest","Search","input","focus","value","onChange","onSubmit","event","preventDefault","ref","el","kek","PATH_BASE","TableAndButtonWithLoading","updateSearchTopStories","hits","page","searchKey","results","oldHits","updatedHits","App","searchTerm","error","_isMounted","needsToSearchTopStories","setSearchTopStories","result","fetchSearchTopStories","axios","then","data","catch","componentDidMount","componentWillUnmount","onSearchChange","target","onSearchSubmit","id","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7b7c7f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ onClick, className, children }) =>\r\n  <button onClick={onClick} className={className} type=\"button\">\r\n    {children}\r\n  </button>\r\n\r\nexport {Button};\r\n","import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport classNames from \"classnames\";\r\n\r\nimport {Button} from \"./Button.js\"\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, \"title\"),\r\n  AUTHOR: list => sortBy(list, \"author\"),\r\n  COMMENTS: list => sortBy(list, \"num_comments\").reverse(),\r\n  POINTS: list => sortBy(list, \"points\").reverse()\r\n};\r\n\r\nconst Sort = ({ sortKey, activeSortKey, onSort, isSortReverse, children }) => {\r\n  const sortClass = classNames(\"button-inline\", {\r\n    \"button-active\": sortKey === activeSortKey\r\n  });\r\n  const imgPath = sortClass.includes(\"button-active\")\r\n    ? isSortReverse ? \"./images/sort_down.png\" : \"./images/sort_up.png\"\r\n    : \"\";\r\n  return (\r\n    <Button onClick={() => onSort(sortKey)} className={sortClass}>\r\n      {imgPath ?\r\n        <div className=\"imageHolder\">\r\n          <img src={imgPath} alt=\"sort_icon\" />\r\n        </div>\r\n      : true}\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport {SORTS, Sort};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {SORTS, Sort} from \"./Sort.js\"\r\nimport {Button} from \"./Button.js\"\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    sortKey: \"NONE\",\r\n    isSortReverse: false\r\n  };\r\n\r\n  onSort = sortKey => {\r\n    this.setState(prevState => {\r\n      const isSortReverse =\r\n        prevState.sortKey === sortKey && !prevState.isSortReverse;\r\n      return { sortKey, isSortReverse };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { list, onDismiss } = this.props;\r\n    const { sortKey, isSortReverse } = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n    return (\r\n      <div className=\"table\">\r\n        <div className=\"table-header\">\r\n          <span className=\"span-title\">\r\n            <Sort\r\n              sortKey={\"TITLE\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n              isSortReverse={isSortReverse}\r\n            >\r\n              Title\r\n            </Sort>\r\n          </span>\r\n          <span className=\"span-author\">\r\n            <Sort\r\n              sortKey={\"AUTHOR\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n              isSortReverse={isSortReverse}\r\n            >\r\n              Author\r\n            </Sort>\r\n          </span>\r\n          <span className=\"span-comments\">\r\n            <Sort\r\n              sortKey={\"COMMENTS\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n              isSortReverse={isSortReverse}\r\n            >\r\n              Comments\r\n            </Sort>\r\n          </span>\r\n          <span className=\"span-points\">\r\n            <Sort\r\n              sortKey={\"POINTS\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n              isSortReverse={isSortReverse}\r\n            >\r\n              Points\r\n            </Sort>\r\n          </span>\r\n          <span className=\"span-archive\">Archive</span>\r\n        </div>\r\n        {reverseSortedList.map(item => (\r\n          <div key={item.objectID} className=\"table-row\">\r\n            <span className=\"span-title\">\r\n              <a href={item.url}>{item.title}</a>\r\n            </span>\r\n            <span className=\"span-author\">\r\n              {item.author}\r\n            </span>\r\n            <span className=\"span-comments\">\r\n              {item.num_comments}\r\n            </span>\r\n            <span className=\"span-points\">\r\n              {item.points}\r\n            </span>\r\n            <span className=\"span-archive\">\r\n              <Button\r\n                onClick={() => onDismiss(item.objectID)}\r\n                className=\"button-inline\"\r\n              >\r\n                Dismiss\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Table};\r\n","import React from \"react\";\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    Loading ...<img src=\"./images/spinner.gif\" alt=\"\" />\r\n  </div>\r\n);\r\n\r\nexport {Loading};\r\n","import React from \"react\";\r\n\r\nimport {Loading} from \"./Loading.js\"\r\n\r\nconst withLoading = Component => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nexport default {\r\n  withLoading: withLoading\r\n}\r\n\r\nexport {withLoading};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.input) {\r\n      this.input.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, onChange, onSubmit, children } = this.props;\r\n    return (\r\n      <form onSubmit={(event) => {event.preventDefault(); onSubmit(event);}}>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          ref={el => (this.input = el)}\r\n        />\r\n        <button type=\"submit\" ref={el => (this.kek = el)}>\r\n          {children}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Search};\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {TableAndButton} from \"./TableAndButton.js\"\r\nimport {withLoading} from \"./utils.js\"\r\nimport {Search} from \"./Search.js\"\r\n\r\nconst DEFAULT_QUERY = \"react\";\r\nconst DEFAULT_HPP = \"50\";\r\n\r\nconst PATH_BASE = \"https://hn.algolia.com/api/v1\";\r\nconst PATH_SEARCH = \"/search\";\r\nconst PARAM_SEARCH = \"query=\";\r\nconst PARAM_PAGE = \"page=\";\r\nconst PARAM_HPP = \"hitsPerPage=\";\r\n\r\nconst TableAndButtonWithLoading = withLoading(TableAndButton);\r\n\r\nconst updateSearchTopStories = (hits, page) => (prevState) => {\r\n  const { searchKey, results } = prevState;\r\n  const oldHits =\r\n    results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: {\r\n      ...results,\r\n      [searchKey]: {\r\n        hits: updatedHits,\r\n        page\r\n      }\r\n    },\r\n    isLoading: false\r\n  }\r\n\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    results: null,\r\n    searchKey: \"\",\r\n    searchTerm: DEFAULT_QUERY,\r\n    error: null,\r\n    isLoading: false\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  needsToSearchTopStories = (searchTerm) => {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setSearchTopStories = (result) => {\r\n    const { hits, page } = result;\r\n    this.setState(updateSearchTopStories(hits,page));\r\n  }\r\n\r\n  fetchSearchTopStories = (searchTerm, page = 0) => {\r\n    this.setState({ isLoading: true });\r\n    axios(\r\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${\r\n        page\r\n      }&${PARAM_HPP}${DEFAULT_HPP}`\r\n    )\r\n      .then(result => {\r\n        if (this._isMounted) {\r\n          this.setSearchTopStories(result.data);\r\n        }\r\n      })\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this._isMounted = true;\r\n    let searchTerm;\r\n    this.setState(prevState => {\r\n      searchTerm = prevState.searchTerm;\r\n      return {\r\n        searchKey: searchTerm\r\n      }\r\n    }, () => {this.fetchSearchTopStories(searchTerm);})\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  onSearchSubmit = (event) => {\r\n    let searchTerm;\r\n    searchTerm = this.state.searchTerm;\r\n    this.setState(prevState => {\r\n      searchTerm = prevState.searchTerm;\r\n      return {searchKey: searchTerm}\r\n    }, () => {\r\n      if (this.needsToSearchTopStories(searchTerm)) {\r\n        this.fetchSearchTopStories(searchTerm);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDismiss = (id) => {\r\n    this.setState(prevState => {\r\n      const { searchKey, results } = prevState;\r\n      const { hits, page } = results[searchKey];\r\n      const isNotId = item => item.objectID !== id;\r\n      const updatedHits = hits.filter(isNotId);\r\n      return {\r\n        results: {\r\n          ...results,\r\n          [searchKey]: {\r\n            hits: updatedHits,\r\n            page\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      searchTerm,\r\n      results,\r\n      searchKey,\r\n      error,\r\n      isLoading\r\n    } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    if (error) {\r\n      return <p>Something went wrong.</p>;\r\n    }\r\n    return (\r\n      <div className=\"page\">\r\n        <p>What do you want to find?<br></br></p>\r\n\r\n        <Search\r\n          value={searchTerm}\r\n          onChange={this.onSearchChange}\r\n          onSubmit={this.onSearchSubmit}\r\n        >\r\n          Search\r\n        </Search>\r\n        <TableAndButtonWithLoading\r\n          isLoading={isLoading}\r\n          list={list}\r\n          onDismiss={this.onDismiss}\r\n          onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\r\n        >\r\n          More\r\n        </TableAndButtonWithLoading>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nexport { App };\r\n","import React from \"react\";\r\n\r\nimport {Table} from \"./Table.js\"\r\nimport {Button} from  \"./Button.js\"\r\n\r\nconst TableAndButton = ({\r\n  list,\r\n  onDismiss,\r\n  onClick,\r\n  className = \"\",\r\n  children\r\n}) => {\r\n  return (\r\n    <>\r\n      <Table\r\n        list={list}\r\n        onDismiss={onDismiss}\r\n      />\r\n      <Button onClick={onClick} className={className}>\r\n        {children}\r\n      </Button>\r\n    </>\r\n  )}\r\n\r\nexport {TableAndButton};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport {App} from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}